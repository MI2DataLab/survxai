class(broken_cumm) = "data.frame"
}
broken_cumm$trans_contribution <- broken_cumm$cummulative - broken_cumm$prev
broken_cumm <- droplevels(broken_cumm)
pl <- ggplot(broken_cumm, aes(x = position + 0.5,
y = pmax(cummulative, prev),
xmin = position, xmax=position + 0.95,
ymin = cummulative, ymax = prev,
fill = sign,
label = sapply(trans_contribution, function(tmp) as.character(rounding_function(tmp, digits))))) +
geom_errorbarh(data=broken_cumm[-nrow(broken_cumm),],
aes(xmax = position,
xmin = position + 2,
y = cummulative), height=0,
lty="F2") +
geom_rect(alpha = 0.9) +
geom_hline(yintercept = trans(constant))
if(add_contributions)
pl <- pl + geom_text(nudge_y = 0.1, vjust = 0.5, hjust=0)
pl <- pl +
scale_y_continuous(expand = c(0.1,0.1), name="") +
scale_x_continuous(labels = broken_cumm$variable, breaks = broken_cumm$position+0.5, name="") +
scale_fill_manual(values = vcolors)
}
pl + coord_flip() + theme_classic() +
theme(legend.position = "none", panel.border = element_blank())
}
}
plot(br, top_features = 2, min_delta = 2)
plot(br, top_features = 20, min_delta = 0.1)
plot(br, top_features = 20, min_delta = 0.3)
library(breakDown)
library(shapleyr)
###############################
set.seed(123)
data(wine)
wine$quality <- ifelse(wine$quality>5, 1, 0)
wine$quality <- factor(wine$quality)
train_index <- sample(1:nrow(wine), 0.6 * nrow(wine))
test_index <- setdiff(1:nrow(wine), train_index)
wineTest <- wine[test_index,]
classif_task <- makeClassifTask(id = "ap", data = wine, target = "quality")
classif_lrn_rf <- makeLearner("classif.randomForest", predict.type = "prob")
classif_rf <- train(classif_lrn_rf, classif_task, subset=train_index)
y_test <- as.numeric(as.character(wineTest$quality))
custom_predict_classif <- function(object, newdata) {pred <- predict(object, newdata=newdata)
response <- pred$data[,3]
return(response)
}
explainer_classif_rf <- DALEX::explain(classif_rf, data=wineTest, y=y_test, label= "rf", predict_function = custom_predict_classif)
#library(randomForest)
#bierzemy mlr bo shapley dziala pod nim i lime tez
mp_rf <- DALEX::model_performance(explainer_classif_rf)
which.min(mp_rf$diff)
differences <- data.frame(obs = 1:nrow(wineTest), diff = mp_rf$diff)
differences <- dplyr::arrange(differences, diff)
out1_index <- differences[1,1]
out2_index <- differences[2,1]
differences_2 <- dplyr::filter(differences, diff<1 & diff>0)
typ1_index <- differences_2[1,1]
typ2_index <- differences_2[2,1]
outlier_1 <- wineTest[out1_index,]
outlier_2 <- wineTest[out2_index,]
typicall_1 <- wineTest[typ1_index,]
typicall_2 <- wineTest[typ2_index,]
# Explain new observation
explanation <- explain(outlier_1, explainer, n_labels=2, n_features = 2)
#############
#lime
#############
library(lime)
explainer <- lime(wine, classif_rf)
# Explain new observation
explanation <- explain(outlier_1, explainer, n_labels=2, n_features = 2)
plot_features(explanation)
library(breakDown)
library(shapleyr)
###############################
data(apartments)
library(randomForest)
#bierzemy mlr bo shapley dziala pod nim i lime tez
set.seed(123)
regr_task <- makeRegrTask(id = "ap", data = apartments[,-6], target = "m2.price")
regr_lrn_rf <- makeLearner("regr.randomForest")
regr_rf <- train(regr_lrn_rf, regr_task)
data(apartmentsTest)
custom_predict <- function(object, newdata) {pred <- predict(object, newdata=newdata)
response <- pred$data$response
return(response)}
explainer_regr_rf <- DALEX::explain(regr_rf, data=apartmentsTest[,-6], y=apartmentsTest$m2.price, predict_function = custom_predict, label="rf")
mp_rf <- DALEx::model_performance(explainer_rf)
which.min(mp_rf$diff)
differences <- data.frame(obs = 1:9000, diff = mp_rf$diff)
differences <- dplyr::arrange(differences, diff)
out1_index <- differences[1,1]
out2_index <- differences[2,1]
differences_2 <- dplyr::filter(differences, diff<1 & diff>0)
typ1_index <- differences_2[1,1]
typ2_index <- differences_2[2,1]
outlier_1 <- apartmentsTest[out1_index,]
outlier_2 <- apartmentsTest[out2_index,]
typicall_1 <- apartmentsTest[typ1_index,]
typicall_2 <- apartmentsTest[typ2_index,]
library(DALEX)
data(apartments)
library(randomForest)
set.seed(123)
regr_task <- makeRegrTask(id = "ap", data = apartments[,-6], target = "m2.price")
regr_lrn_rf <- makeLearner("regr.randomForest")
regr_rf <- train(regr_lrn_rf, regr_task)
data(apartmentsTest)
custom_predict <- function(object, newdata) {pred <- predict(object, newdata=newdata)
response <- pred$data$response
return(response)}
explainer_regr_rf <- DALEX::explain(regr_rf, data=apartmentsTest[,-6], y=apartmentsTest$m2.price, predict_function = custom_predict, label="rf")
mp_rf <- DALEx::model_performance(explainer_rf)
mp_rf <- DALEX::model_performance(explainer_rf)
mp_rf <- DALEX::model_performance(explainer_regr_rf)
which.min(mp_rf$diff)
differences <- data.frame(obs = 1:9000, diff = mp_rf$diff)
differences <- dplyr::arrange(differences, diff)
out1_index <- differences[1,1]
out2_index <- differences[2,1]
differences_2 <- dplyr::filter(differences, diff<1 & diff>0)
typ1_index <- differences_2[1,1]
typ2_index <- differences_2[2,1]
outlier_1 <- apartmentsTest[out1_index,]
outlier_2 <- apartmentsTest[out2_index,]
typicall_1 <- apartmentsTest[typ1_index,]
typicall_2 <- apartmentsTest[typ2_index,]
############
#breakDown
############
br_outlier_1 <- broken(apartments_rf_model, outlier_1, data = apartmentsTest[,-1])
br_outlier_2 <- broken(regr_rf, outlier_2, data = apartmentsTest[,-1])
############
#breakDown
############
br_outlier_1 <- broken(regr_rf, outlier_1, data = apartmentsTest[,-1])
br_outlier_2 <- broken(regr_rf, outlier_2, data = apartmentsTest[,-1])
#############
#lime
#############
library(lime)
explainer <- lime(apartments, regr_rf)
# Explain new observation
explanation <- explain(outlier_1, explainer)
plot_features(explanation)
# Explain new observation
explanation <- lime::explain(outlier_1, explainer, n_labels=2, n_features = 2)
plot_features(explanation)
# Explain new observation
explanation <- lime::explain(outlier_1, explainer, n_labels=2, n_features = 10)
plot_features(explanation)
?lime::explain
explanation <- lime::explain(outlier_2, explainer, n_features = 10)
plot_features(explanation)
View(apartments)
explainer <- lime(apartments[,-6], regr_rf)
# Explain new observation
explanation <- lime::explain(outlier_1, explainer, n_features = 5)
# Explain new observation
explanation <- lime::explain(outlier_1, explainer, n_features = 5)
View(explainer)
explainer <- lime(apartments[,-6], regr_rf)
# Explain new observation
explanation <- lime::explain(outlier_1, explainer, n_features = 5)
# Explain new observation
explanation <- lime::explain(outlier_1, explainer, n_features = 4)
plot_features(explanation)
# Explain new observation
explanation <- lime::explain(outlier_1, explainer, n_features = 10)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(breakDown)
library(lime)
library(shapleyr)
library(breakDown)
library(lime)
library(shapleyr)
apartments = DALEX::apartments
apartmentsTest = DALEX::apartmentsTest
head(apartments)
library(mlr)
set.seed(123)
regr_task <- makeRegrTask(id = "ap", data = apartments, target = "m2.price")
regr_lrn_rf <- makeLearner("regr.randomForest")
regr_rf <- train(regr_lrn_rf, regr_task)
custom_predict <- function(object, newdata) {pred <- predict(object, newdata=newdata)
response <- pred$data$response
return(response)}
explainer_regr_rf <- DALEX::explain(regr_rf, data=apartmentsTest[,-1], y=apartmentsTest$m2.price, predict_function = custom_predict, label="rf")
mp_rf <- DALEX::model_performance(explainer_regr_rf)
differences <- data.frame(obs = 1:9000, diff = mp_rf$diff)
differences <- dplyr::arrange(differences, diff)
out1_index <- differences[1,1]
out2_index <- differences[2,1]
differences_2 <- dplyr::filter(differences, diff<1 & diff>0)
typ1_index <- differences_2[1,1]
typ2_index <- differences_2[2,1]
outlier_1 <- apartmentsTest[out1_index,]
outlier_2 <- apartmentsTest[out2_index,]
typical_1 <- apartmentsTest[typ1_index,]
typical_2 <- apartmentsTest[typ2_index,]
explainer <- lime(apartments[,-1], regr_rf)
lime_outlier_1 <- lime::explain(outlier_1, explainer, n_features = 10)
lime_outlier_1 <- lime::explain(outlier_1, explainer, n_features =5)
lime_outlier_1 <- lime::explain(outlier_1, explainer, n_features = 4)
traceback()
explainer <- lime(apartments, regr_rf)
View(apartments)
explainer <- lime(apartments[,-1], regr_rf)
lime_outlier_1 <- lime::explain(outlier_1, explainer, n_features = 4)
apartments[,-1]
?makeRegrTask
class(regr_rf)
lime_outlier_2 <- lime::explain(outlier_2[,-1], explainer, n_features = 5)
plot_features(lime_outlier_2)
typical_1
outlier_1
plot(br_outlier_1)
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/counts_genes.rda")
View(counts_genes)
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/Araport_dict.rda")
View(Araport11)
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/datac4_smaller.rda")
x <- subset(datac4_smaller, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(datac4_smaller, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/datac2_smaller.rda")
data <- datac2_smaller
x <- subset(datac2_smaller, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/datawt2_smaller.rda")
data <- datawt2_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
data <- datawt1_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/datawt1_smaller.rda")
data <- datawt1_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
x
data <- datawt2_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
data <- datawt4_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/datawt4_smaller.rda")
data <- datawt4_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
data <- databrm1_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/databrm1_smaller.rda")
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/databrm2_smaller.rda")
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/databrm3_smaller.rda")
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/databrm4_smaller.rda")
data <- databrm1_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
data <- databrm2_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
data <- databrm3_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
data <- databrm4_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
data <- datac1_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/datac1_smaller.rda")
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/datac2_smaller.rda")
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/datac3_smaller.rda")
load("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Analizy R. Archacki/dane nowe bam/datac4_smaller.rda")
data <- datac1_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
View(Araport11)
data <- datawt1_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
data <- datawt2_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
data <- datawt4_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
data <- databrm1_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
data <- databrm2_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
data <- databrm3_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
data <- databrm4_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
data <- datac1_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
data <- datac2_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
ata <- datac3_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
data <- datac3_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
data <- datac4_smaller
x <- subset(data, pos>=18922533 & pos<= 18932055)
x <- subset(x, strand=="-")
x <- subset(x, rname=="2")
y <- subset(data, pos>=18932055 & pos <= 18932355)
y <- subset(y, strand=="-")
y <- subset(y, rname=="2")
z <- subset(data, pos>=18931770 & pos <= 18932055)
z <-subset(z, strand=="-")
z <- subset(z, rname=="2")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(DALEX)
library(DALEX)
library(mlr)
regr_task <- makeRegrTask(id = "ap", data = apartments, target = "m2.price")
regr_lrn_rf <- makeLearner("regr.randomForest")
regr_rf <- train(regr_lrn_rf, regr_task)
data(apartmentsTest)
explainer_regr_rf <- DALEX::explain(regr_rf, data=apartmentsTest, y=apartmentsTest$m2.price, predict_function = custom_predict, label="rf")
custom_predict <- function(object, newdata) {pred <- predict(object, newdata=newdata)
response <- pred$data$response
return(response)}
explainer_regr_rf <- DALEX::explain(regr_rf, data=apartmentsTest, y=apartmentsTest$m2.price, predict_function = custom_predict, label="rf")
pdp_regr_rf  <- variable_response(explainer_regr_rf, variable =  "construction.year", type = "pdp")
head(pdp_regr_rf)
mpp_regr_rf  <- variable_response(explainer_regr_rf, variable =  "district", type = "factor")
head(mpp_regr_rf)
View(mpp_regr_rf)
library(survxai)
library(rms)
library(randomForestSRC)
data(pbc, package = "randomForestSRC")
pbc <- pbc[complete.cases(pbc),]
predict_times <- function(model, data, times){
prob <- rms::survest(model, data, times = times)$surv
return(prob)
}
cph_model <- cph(Surv(days/365, status)~., data=pbc, surv=TRUE, x = TRUE, y=TRUE)
surve_cph <- explain(model = cph_model,
data = pbc, y = Surv(pbc$days/365, pbc$status),
predict_function = predict_times)
x <- surve_cph
fit <- survfit(x$model, data = x$data, newdata = x$data)
ggsurvplot(fit)
library(survminer)
ggsurvplot(fit)
library(survival)
fit <- survfit(x$model, data = x$data, newdata = x$data)
ggsurvplot(fit)
View(fit)
covr::package_coverage()
getwd()
setwd()
setwd("C:/Users/Aleksandra Grudziaz.DESKTOP-1PK02R5/Documents/Github/survxai")
covr::package_coverage()
devtools::check()
